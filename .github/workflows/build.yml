# NB: this name is used in the status badge
name: "build"

on:
  push:
    branches:
      - '**'
  pull_request:
    branches:
      - dev
      - main

# Copied from travis.yml, might need to be re-included
#env:
#  global:
#    - LD_PRELOAD=/lib/x86_64-linux-gnu/libSegFault.so
#    - SEGFAULT_SIGNALS=all
#    - LANG=en_US.UTF-8

jobs:
  check:
    name: check (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
      max-parallel: 4
      fail-fast: false
    steps:
      - uses: "actions/checkout@v2"
      - name: "Install dependencies"
        run: |
          python -mpip install --progress-bar=off tox
          tox --version
      - name: "Build documentation"
        run: "python -m tox -vv -e check"
  docs:
    name: docs (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
      max-parallel: 4
      fail-fast: false
    steps:
      - uses: "actions/checkout@v2"
      - name: "Install dependencies"
        run: |
          python -mpip install --progress-bar=off tox
          tox --version
      - name: "Build documentation"
        run: "python -m tox -vv -e docs"
  tests:
    name: tests (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}

    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ["3.7", "3.8"]
      max-parallel: 4
      fail-fast: false

    steps:
      - uses: "actions/checkout@v2"
      - uses: "actions/setup-python@v2"
        with:
          python-version: "${{ matrix.python-version }}"
      - name: "Create correctly named executable on Windows"
        if: ${{ matrix.platform == 'windows-latest' }}
        run: |
          cd ${{ env.pythonLocation }}
          New-Item -ItemType SymbolicLink `
              -Path python${{ matrix.python-version }}.exe `
              -Target ${{ env.pythonLocation }}/python.exe
      - name: "Install dependencies"
        run: |
          python -mpip install --progress-bar=off tox -r'ci/requirements.txt'
          virtualenv --version
          pip --version
          tox --version
      - name: "Run tests"
        run: "python -m tox -vv -e py${{ matrix.python-version }}-nocov"
